<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:BudgetPlanner.Client.Controls">
		<!--
    Additional resources 
    Using Control Themes:
         https://docs.avaloniaui.net/docs/basics/user-interface/styling/control-themes
    Using Theme Variants:
         https://docs.avaloniaui.net/docs/guides/styles-and-resources/how-to-use-theme-variants
  -->
	
	<Design.PreviewWith>
		<StackPanel Margin="20">
			<controls:MultiSelectItem>Hello World</controls:MultiSelectItem>
			<controls:MultiSelectItem>Hello World</controls:MultiSelectItem>
			<controls:MultiSelectItem IsSelected="True">Hello World</controls:MultiSelectItem>

			<controls:MultiSelect>
				<controls:MultiSelectItem>Hello World</controls:MultiSelectItem>
				<controls:MultiSelectItem>Hello World</controls:MultiSelectItem>
				<controls:MultiSelectItem IsSelected="True">Hello World</controls:MultiSelectItem>
			</controls:MultiSelect>
			
		</StackPanel>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type controls:MultiSelect}" TargetType="controls:MultiSelect">
		<Setter Property="Padding" Value="{DynamicResource MultiSelectSelectorDefaultPadding}" />
		<Setter Property="FocusAdorner" Value="{x:Null}" />
		<Setter Property="MaxDropDownHeight" Value="504" />
		<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderBrush}" />
		<Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Cursor" Value="Hand" />
		<Setter Property="CornerRadius" Value="{DynamicResource MultiSelectSelectorCornerRadius}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="MinHeight" Value="{DynamicResource MultiSelectDefaultHeight}" />
		<Setter Property="Template">
			<ControlTemplate TargetType="controls:MultiSelect">
				<DataValidationErrors>
					<Grid ColumnDefinitions="*, Auto">
						<Border
                            x:Name="Background"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BackgroundSizing="{TemplateBinding BackgroundSizing}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            MinHeight="{TemplateBinding MinHeight}" />
						<TextBlock
                            x:Name="PlaceholderTextBlock"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            TextTrimming="CharacterEllipsis"
                            Foreground="{TemplateBinding Foreground}"
                            IsVisible="{TemplateBinding SelectionBoxItem,
                                                        Converter={x:Static ObjectConverters.IsNull}}"
                            Opacity="0.3"
                            Text="{TemplateBinding PlaceholderText}" />
						<ContentPresenter
                            x:Name="ContentPresenter"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ItemTemplate}" />
						<Button
                            Name="ClearButton"
                            Grid.Column="1"
                            Margin="0,0,8,0"
                            Command="{Binding $parent[controls:MultiSelect].Clear}"
                            Content="{DynamicResource IconButtonClearData}"
                            Focusable="False"
                            IsVisible="False"
                            Theme="{DynamicResource InnerIconButton}" />
						<Border
                            x:Name="DropDownOverlay"
                            Grid.Column="1"
                            Width="30"
                            Margin="0,1,1,1"
                            HorizontalAlignment="Right"
                            Background="Transparent"
                            IsVisible="False" />

						<PathIcon
                            x:Name="DropDownGlyph"
                            Grid.Column="1"
                            Width="12"
                            Height="12"
                            Margin="0,0,12,0"
                            Data="{DynamicResource MultiSelectIcon}"
                            Foreground="{DynamicResource MultiSelectIconDefaultForeground}"
                            IsHitTestVisible="False"
                            UseLayoutRounding="False" />

						<Popup
                            Name="PART_Popup"
                            Grid.Column="0"
                            MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}"
                            ClipToBounds="False"
                            InheritsTransform="True"
                            IsLightDismissEnabled="True"
                            IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                            PlacementTarget="Background"
                            WindowManagerAddShadowHint="False">
							<Border
                                x:Name="PopupBorder"
                                Margin="0,4"
                                HorizontalAlignment="Stretch"
                                Background="{DynamicResource MultiSelectPopupBackground}"
                                BorderBrush="{DynamicResource MultiSelectPopupBorderBrush}"
                                BorderThickness="{DynamicResource MultiSelectPopupBorderThickness}"
                                BoxShadow="{DynamicResource MultiSelectPopupBoxShadow}"
                                ClipToBounds="True"
                                CornerRadius="6">
								<ScrollViewer
                                    HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                    IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
                                    VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
									<ItemsPresenter
                                        Name="PART_ItemsPresenter"
                                        Margin="{DynamicResource MultiSelectDropdownContentMargin}"
                                        ItemsPanel="{TemplateBinding ItemsPanel}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>

		<Style Selector="^.clearButton, ^.ClearButton">
			<Style Selector="^:pointerover /template/ Button#ClearButton">
				<Setter Property="IsVisible" Value="{Binding $parent[controls:MultiSelect].SelectionBoxItem, Converter={x:Static ObjectConverters.IsNotNull}}" />
			</Style>
			<Style Selector="^:pointerover /template/ PathIcon#DropDownGlyph">
				<Setter Property="IsVisible" Value="{Binding $parent[controls:MultiSelect].SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}"/>
			</Style>
		</Style>

		<Style Selector="^.Large">
			<Setter Property="MinHeight" Value="{DynamicResource MultiSelectLargeHeight}" />
		</Style>
		<Style Selector="^.Small">
			<Setter Property="MinHeight" Value="{DynamicResource MultiSelectSmallHeight}" />
		</Style>

		<!--  Pointerover State  -->
		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorPointeroverBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorPointeroverBorderBrush}" />
			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectIconPointeroverForeground}" />
			</Style>
		</Style>

		<!--  Focus State  -->
		<Style Selector="^:focus">
			<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorFocusBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorFocusBorderBrush}" />
			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectIconFocusForeground}" />
			</Style>
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorPressedBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorPressedBorderBrush}" />
			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectIconPressedForeground}" />
			</Style>
		</Style>

		<Style Selector="^:dropdownopen">
			<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorPressedBorderBrush}" />
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorDisabledBackground}" />
			<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorDisabledBorderBrush}" />
			<Style Selector="^ /template/ ContentControl#ContentPresenter">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectDisabledForeground}" />
			</Style>
			<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectDisabledForeground}" />
			</Style>
			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource MultiSelectIconDisabledForeground}" />
			</Style>
		</Style>
		<!--  Error State  -->
		<Style Selector="^:error">
			<Style Selector="^ /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource DataValidationErrorsBackground}" />
			</Style>
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource DataValidationErrorsPointerOverBackground}" />
				<Setter Property="BorderBrush" Value="Transparent" />
			</Style>
			<Style Selector="^:pressed /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource DataValidationErrorsPressedBackground}" />
				<Setter Property="BorderBrush" Value="Transparent" />
			</Style>
			<Style Selector="^:focus /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource DataValidationErrorsSelectedBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsSelectedBorderBrush}" />
			</Style>
		</Style>

		<Style Selector="^.Bordered">
			<Style Selector="^ /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorBorderedBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderedBorderBrush}" />
			</Style>
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorBorderedPointeroverBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderedPointeroverBorderBrush}" />
			</Style>
			<Style Selector="^:pressed /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorBorderedPressedBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderedPressedBorderBrush}" />
			</Style>
			<Style Selector="^:focus /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorBorderedFocusBackground}" />
				<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderedFocusBorderBrush}" />
			</Style>
			<Style Selector="^:disabled">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource MultiSelectSelectorDisabledBackground}" />
					<Setter Property="BorderBrush" Value="{DynamicResource MultiSelectSelectorBorderBrush}" />
				</Style>
				<Style Selector="^ /template/ ContentControl#ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource MultiSelectDisabledForeground}" />
				</Style>
				<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
					<Setter Property="Foreground" Value="{DynamicResource MultiSelectDisabledForeground}" />
				</Style>
				<Style Selector="^ /template/ PathIcon#DropDownGlyph">
					<Setter Property="Foreground" Value="{DynamicResource MultiSelectIconDisabledForeground}" />
				</Style>
			</Style>
			<Style Selector="^:error">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource DataValidationErrorsBackground}" />
					<Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsBorderBrush}" />
				</Style>
				<Style Selector="^:pointerover /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource DataValidationErrorsPointerOverBackground}" />
					<Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsPointerOverBorderBrush}" />
				</Style>
				<Style Selector="^:pressed /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource DataValidationErrorsPressedBackground}" />
					<Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsPressedBorderBrush}" />
				</Style>
				<Style Selector="^:focus /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource DataValidationErrorsSelectedBackground}" />
					<Setter Property="BorderBrush" Value="{DynamicResource DataValidationErrorsSelectedBorderBrush}" />
				</Style>
			</Style>
		</Style>
	</ControlTheme>
</ResourceDictionary>
